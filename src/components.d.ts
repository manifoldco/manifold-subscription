/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Connection, } from "@manifoldco/manifold-init-types/types/v0";
import { GraphqlError, } from "@manifoldco/manifold-init-types/types/v0/graphqlFetch";
import { PlanQuery, } from "./types/graphql";
import { SetupIntent, } from "@stripe/stripe-js";
export namespace Components {
    interface ManifoldConfiguredFeature {
        "label"?: string;
        "value"?: string;
    }
    interface ManifoldSubscriptionCreate {
        "configuredFeatures"?: {
            label: string;
            value: string;
        }[];
        "connection": Connection;
        "data"?: PlanQuery;
        /**
          * (Optional) Name given to the new subscription
         */
        "displayName"?: string;
        "errors"?: GraphqlError[];
        /**
          * Component heading text
         */
        "heading"?: string;
        /**
          * (Optional) Label given to the new subscription
         */
        "label"?: string;
        "loading"?: boolean;
        /**
          * Plan ID for the new subscription
         */
        "planId"?: string;
        "setupIntentError"?: string;
        "setupIntentStatus"?: SetupIntent.Status;
        "subscribing"?: boolean;
    }
}
declare global {
    interface HTMLManifoldConfiguredFeatureElement extends Components.ManifoldConfiguredFeature, HTMLStencilElement {
    }
    var HTMLManifoldConfiguredFeatureElement: {
        prototype: HTMLManifoldConfiguredFeatureElement;
        new (): HTMLManifoldConfiguredFeatureElement;
    };
    interface HTMLManifoldSubscriptionCreateElement extends Components.ManifoldSubscriptionCreate, HTMLStencilElement {
    }
    var HTMLManifoldSubscriptionCreateElement: {
        prototype: HTMLManifoldSubscriptionCreateElement;
        new (): HTMLManifoldSubscriptionCreateElement;
    };
    interface HTMLElementTagNameMap {
        "manifold-configured-feature": HTMLManifoldConfiguredFeatureElement;
        "manifold-subscription-create": HTMLManifoldSubscriptionCreateElement;
    }
}
declare namespace LocalJSX {
    interface ManifoldConfiguredFeature {
        "label"?: string;
        "value"?: string;
    }
    interface ManifoldSubscriptionCreate {
        "configuredFeatures"?: {
            label: string;
            value: string;
        }[];
        "connection"?: Connection;
        "data"?: PlanQuery;
        /**
          * (Optional) Name given to the new subscription
         */
        "displayName"?: string;
        "errors"?: GraphqlError[];
        /**
          * Component heading text
         */
        "heading"?: string;
        /**
          * (Optional) Label given to the new subscription
         */
        "label"?: string;
        "loading"?: boolean;
        /**
          * Plan ID for the new subscription
         */
        "planId"?: string;
        "setupIntentError"?: string;
        "setupIntentStatus"?: SetupIntent.Status;
        "subscribing"?: boolean;
    }
    interface IntrinsicElements {
        "manifold-configured-feature": ManifoldConfiguredFeature;
        "manifold-subscription-create": ManifoldSubscriptionCreate;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "manifold-configured-feature": LocalJSX.ManifoldConfiguredFeature & JSXBase.HTMLAttributes<HTMLManifoldConfiguredFeatureElement>;
            "manifold-subscription-create": LocalJSX.ManifoldSubscriptionCreate & JSXBase.HTMLAttributes<HTMLManifoldSubscriptionCreateElement>;
        }
    }
}
